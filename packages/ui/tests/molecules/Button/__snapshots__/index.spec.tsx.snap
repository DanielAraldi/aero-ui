// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> Android Should take a snapshot of the Button component when it's loading 1`] = `
<View
  collapsable={false}
  style={
    {
      "height": 64,
      "transform": [
        {
          "scale": 1,
        },
      ],
      "width": "100%",
    }
  }
  testID="wrapper"
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": true,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": false,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#3B82F6",
          "borderRadius": 9999,
          "height": "100%",
          "justifyContent": "center",
          "paddingHorizontal": 8,
          "paddingVertical": 8,
          "width": "auto",
        },
        undefined,
      ]
    }
    testID="pressable"
  >
    <View
      style={
        {
          "opacity": 1,
        }
      }
      testID="content"
    >
      <ActivityIndicator
        accessibilityLabel="Loading"
        accessibilityRole="none"
        accessibilityState={
          {
            "disabled": true,
          }
        }
        accessible={true}
        animating={true}
        aria-disabled={true}
        aria-label="Loading"
        color="#FFFFFF"
        hidesWhenStopped={true}
        size={24}
        testID="spinner"
      />
    </View>
  </View>
</View>
`;

exports[`<Button /> Both (iOS and Android) Should take a snapshot of the Button component 1`] = `
<View
  collapsable={false}
  style={
    {
      "height": 64,
      "transform": [
        {
          "scale": 1,
        },
      ],
      "width": "100%",
    }
  }
  testID="wrapper"
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": false,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#3B82F6",
          "borderRadius": 9999,
          "height": "100%",
          "justifyContent": "center",
          "paddingHorizontal": 8,
          "paddingVertical": 8,
          "width": "auto",
        },
        undefined,
      ]
    }
    testID="pressable"
  >
    <View
      style={
        {
          "opacity": 1,
        }
      }
      testID="content"
    >
      <Text
        accessibilityRole="text"
        accessible={true}
        style={
          [
            {
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 24,
            },
            {
              "color": "#FFFFFF",
            },
          ]
        }
        testID="text"
      >
        Title
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Button /> iOS Should take a snapshot of the Button component when it's loading 1`] = `
<View
  collapsable={false}
  style={
    {
      "height": 64,
      "transform": [
        {
          "scale": 1,
        },
      ],
      "width": "100%",
    }
  }
  testID="wrapper"
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": true,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": false,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#3B82F6",
          "borderRadius": 9999,
          "height": "100%",
          "justifyContent": "center",
          "paddingHorizontal": 8,
          "paddingVertical": 8,
          "width": "auto",
        },
        undefined,
      ]
    }
    testID="pressable"
  >
    <View
      style={
        {
          "opacity": 1,
        }
      }
      testID="content"
    >
      <View
        accessibilityLabel="Loading"
        accessibilityRole="none"
        accessibilityState={
          {
            "disabled": true,
          }
        }
        accessible={true}
        aria-disabled={true}
        aria-label="Loading"
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderBottomColor": "#FFFFFF",
            "borderLeftColor": "#FFFFFF",
            "borderRadius": 9999,
            "borderRightColor": "#FFFFFF40",
            "borderTopColor": "#FFFFFF40",
            "borderWidth": 4,
            "height": 24,
            "transform": [
              {
                "rotate": "0deg",
              },
            ],
            "width": 24,
          }
        }
        testID="spinner"
      />
    </View>
  </View>
</View>
`;
